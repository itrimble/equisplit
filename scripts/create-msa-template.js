const fs = require('fs');
const path = require('path');
const PizZip = require('pizzip');
const Docxtemplater = require('docxtemplater');

// Template content that matches the MSA data transformer
const templateContent = `MARITAL SETTLEMENT AGREEMENT

This Marital Settlement Agreement ("Agreement") is made and entered into this ____ day of _______________, 20__, by and between:

Spouse 1: {spouse1_name}
Address: {spouse1_address_placeholder}

and

Spouse 2: {spouse2_name}
Address: {spouse2_address_placeholder}

I. RECITALS

A. Marriage Details
Date of Marriage: {marriage_date}
Date of Separation: {separation_date}
Jurisdiction: This agreement is made with reference to the laws of the State of {jurisdiction_state}.

II. DIVISION OF ASSETS

A. Marital Assets Awarded to {spouse1_name}
The following marital assets shall be awarded to {spouse1_name} as their sole and separate property:
{#marital_assets_s1}
- {description} (Approximate Value: {value_s1})
{/marital_assets_s1}
{^marital_assets_s1}
None specified or awarded.
{/marital_assets_s1}

B. Marital Assets Awarded to {spouse2_name}
The following marital assets shall be awarded to {spouse2_name} as their sole and separate property:
{#marital_assets_s2}
- {description} (Approximate Value: {value_s2})
{/marital_assets_s2}
{^marital_assets_s2}
None specified or awarded.
{/marital_assets_s2}

C. {spouse1_name}'s Separate Assets
The following assets are confirmed as the sole and separate property of {spouse1_name}:
{#separate_assets_s1}
- {description} (Approximate Value: {value})
{/separate_assets_s1}
{^separate_assets_s1}
None specified.
{/separate_assets_s1}

D. {spouse2_name}'s Separate Assets
The following assets are confirmed as the sole and separate property of {spouse2_name}:
{#separate_assets_s2}
- {description} (Approximate Value: {value})
{/separate_assets_s2}
{^separate_assets_s2}
None specified.
{/separate_assets_s2}

III. DIVISION OF DEBTS

A. Marital Debts Assigned to {spouse1_name}
{spouse1_name} shall be solely responsible for the following marital debts:
{#marital_debts_s1}
- {description} (Approximate Balance: {balance_s1})
{/marital_debts_s1}
{^marital_debts_s1}
None specified or assigned.
{/marital_debts_s1}

B. Marital Debts Assigned to {spouse2_name}
{spouse2_name} shall be solely responsible for the following marital debts:
{#marital_debts_s2}
- {description} (Approximate Balance: {balance_s2})
{/marital_debts_s2}
{^marital_debts_s2}
None specified or assigned.
{/marital_debts_s2}

C. {spouse1_name}'s Separate Debts
The following debts are confirmed as the sole and separate responsibility of {spouse1_name}:
{#separate_debts_s1}
- {description} (Approximate Balance: {balance})
{/separate_debts_s1}
{^separate_debts_s1}
None specified.
{/separate_debts_s1}

D. {spouse2_name}'s Separate Debts
The following debts are confirmed as the sole and separate responsibility of {spouse2_name}:
{#separate_debts_s2}
- {description} (Approximate Balance: {balance})
{/separate_debts_s2}
{^separate_debts_s2}
None specified.
{/separate_debts_s2}

{#equalization_payment_details}
IV. EQUALIZATION PAYMENT

{equalization_payment_details}
{/equalization_payment_details}

V. SPOUSAL SUPPORT

{spousal_support_details}

VI. CHILD CUSTODY AND SUPPORT

{child_support_custody_details}

VII. GENERAL PROVISIONS

A. Full Disclosure: Each party acknowledges that they have made a full and fair disclosure of all their assets and debts to the other party.

B. Binding Agreement: This Agreement is the entire understanding between the parties and shall be binding upon them, their heirs, executors, administrators, and assigns.

C. Governing Law: This Agreement shall be governed by and construed in accordance with the laws of the State of {jurisdiction_state}.

D. Legal Review: EACH PARTY ACKNOWLEDGES THAT THEY HAVE HAD THE OPPORTUNITY TO CONSULT WITH INDEPENDENT LEGAL COUNSEL OF THEIR CHOOSING PRIOR TO SIGNING THIS AGREEMENT. THIS DRAFT DOCUMENT SHOULD BE REVIEWED BY LEGAL COUNSEL.

VIII. SIGNATURES

________________________________________
{spouse1_name}
Date: _______________


________________________________________
{spouse2_name}
Date: _______________

DISCLAIMER: This document is a draft template generated by EquiSplit for informational purposes only and does not constitute legal advice. All parties should review this agreement with qualified legal counsel before execution.`;

// Create a minimal DOCX template
function createMsaTemplate() {
  try {
    // Create a minimal XML structure for a DOCX document
    const documentXml = `<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<w:document xmlns:w="http://schemas.openxmlformats.org/wordprocessingml/2006/main">
  <w:body>
    <w:p>
      <w:r>
        <w:t>${templateContent.replace(/\n/g, '</w:t></w:r></w:p><w:p><w:r><w:t>')}</w:t>
      </w:r>
    </w:p>
  </w:body>
</w:document>`;

    // Create the document relationships XML
    const relsXml = `<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="word/document.xml"/>
</Relationships>`;

    // Create the main relationships XML
    const documentRelsXml = `<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
</Relationships>`;

    // Create content types XML
    const contentTypesXml = `<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types">
  <Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml"/>
  <Default Extension="xml" ContentType="application/xml"/>
  <Override PartName="/word/document.xml" ContentType="application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml"/>
</Types>`;

    // Create app properties XML
    const appXml = `<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Properties xmlns="http://schemas.openxmlformats.org/officeDocument/2006/extended-properties" xmlns:vt="http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes">
  <Application>EquiSplit</Application>
  <DocSecurity>0</DocSecurity>
  <ScaleCrop>false</ScaleCrop>
  <SharedDoc>false</SharedDoc>
  <HyperlinksChanged>false</HyperlinksChanged>
  <AppVersion>1.0</AppVersion>
</Properties>`;

    // Create core properties XML
    const coreXml = `<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<cp:coreProperties xmlns:cp="http://schemas.openxmlformats.org/package/2006/metadata/core-properties" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:dcmitype="http://purl.org/dc/dcmitype/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dc:title>Marital Settlement Agreement Template</dc:title>
  <dc:creator>EquiSplit</dc:creator>
  <dcterms:created xsi:type="dcterms:W3CDTF">${new Date().toISOString()}</dcterms:created>
  <dcterms:modified xsi:type="dcterms:W3CDTF">${new Date().toISOString()}</dcterms:modified>
</cp:coreProperties>`;

    // Create the ZIP structure for DOCX
    const zip = new PizZip();
    
    // Add files to the ZIP
    zip.file('[Content_Types].xml', contentTypesXml);
    zip.file('_rels/.rels', relsXml);
    zip.file('word/document.xml', documentXml);
    zip.file('word/_rels/document.xml.rels', documentRelsXml);
    zip.file('docProps/app.xml', appXml);
    zip.file('docProps/core.xml', coreXml);

    // Generate the DOCX file
    const outputPath = path.join(__dirname, '..', 'public', 'templates', 'msa_template.docx');
    const content = zip.generate({ type: 'nodebuffer' });
    
    fs.writeFileSync(outputPath, content);
    console.log('✅ MSA template DOCX file created successfully at:', outputPath);
    
    return true;
  } catch (error) {
    console.error('❌ Error creating MSA template:', error);
    return false;
  }
}

// Run the script
if (require.main === module) {
  createMsaTemplate();
}

module.exports = { createMsaTemplate };